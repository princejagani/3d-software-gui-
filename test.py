# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from mimetypes import init
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QVBoxLayout,QWidget,QApplication
from PyQt5.QtWebEngineWidgets import QWebEngineView as QWebView,QWebEnginePage as QWebPage
from PyQt5.QtWebEngineWidgets import QWebEngineSettings as QWebSettings
from PyQt5.QtNetwork import *
from PyQt5.QtCore import QUrl

class Ui_MainWindow(object):
    def __init__(self) -> None:
        self.num=1
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget1 = QtWidgets.QWidget(MainWindow)
        self.centralwidget1.setFixedHeight(600)
        self.centralwidget1.setFixedWidth(1000)
        self.centralwidget1.setGeometry(QtCore.QRect(580, 20, 642, 160))
        self.centralwidget.setStyleSheet("background-color:skyblue;")
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(60, 40, 131, 61))
        self.pushButton.setObjectName("Show")
        self.pushButton.clicked.connect(self.clickme)
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton.setGeometry(QtCore.QRect(270, 240, 222, 48))
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.listView = QtWidgets.QListView(self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(300, 330, 256, 192))
        self.listView.setObjectName("listView")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.verticalLayout=QVBoxLayout()
        self.web=QWebView()
       
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
     
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    
    def clickme(self): 
        
        if(self.num==1):
            self.web.load(QUrl("https://cdn.soft8soft.com/demo/blender/physics/physics.html"))
            self.verticalLayout.addWidget(self.web)
            height=1000
            width=1000
            self.centralwidget1.setLayout(self.verticalLayout)
            self.centralwidget1.setMaximumWidth(width)
            self.centralwidget1.setMaximumHeight(height)
            self.centralwidget1.show()
            self.num=0
        elif(self.num==0):
            self.centralwidget1.close()
            self.num=1


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "PushButton"))
        self.commandLinkButton.setText(_translate("MainWindow", "CommandLinkButton"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())


# from PyQt5.QtWidgets import * 
# from PyQt5.QtGui import * 
# from PyQt5.QtCore import * 
# import sys
  
  
# class Window(QMainWindow):
#     def __init__(self):
#         super().__init__()
  
#         # setting title
#         self.setWindowTitle("Python ")
  
#         # setting geometry
#         self.setGeometry(100, 100, 600, 400)
  
#         # calling method
#         self.UiComponents()
  
#         # showing all the widgets
#         self.show()
  
#     # method for widgets
#     def UiComponents(self):
  
#         # creating a push button
#         button = QPushButton("CLICK", self)
  
#         # setting geometry of button
#         button.setGeometry(200, 150, 100, 30)
  
#         # adding action to a button
#         button.clicked.connect(self.clickme)
  
#     # action method
#     def clickme(self):
  
#         # printing pressed
#         print("pressed")
  
# # create pyqt5 app
# App = QApplication(sys.argv)
  
# # create the instance of our Window
# window = Window()
  
# # start the app
# sys.exit(App.exec())